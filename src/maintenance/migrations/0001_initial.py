# Generated by Django 4.2.1 on 2023-05-05 19:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('vehicles', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата удаления')),
                ('summary', models.CharField(max_length=128)),
                ('date', models.DateTimeField()),
                ('due_date', models.DateTimeField()),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('status', models.CharField(blank=True, choices=[('open', 'open'), ('overdue', 'overdue'), ('solved', 'solved'), ('closed', 'closed')], default='open', max_length=10)),
                ('counter', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='issue', to='vehicles.counter')),
                ('creator', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(blank=True, related_name='service_issues', to=settings.AUTH_USER_MODEL, verbose_name='Ответственные лица')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_issues', to='vehicles.vehicle')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата удаления')),
                ('order', models.IntegerField(blank=True, default=None, null=True)),
                ('name', models.CharField(max_length=128)),
                ('creator', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата удаления')),
                ('start_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('counter', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='record', to='vehicles.counter')),
                ('creator', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('issues', models.ManyToManyField(blank=True, to='maintenance.issue')),
                ('tasks', models.ManyToManyField(blank=True, to='maintenance.task')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_records', to='vehicles.vehicle')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
